@startuml

actor User
participant DashboardFeature as DF
participant DashboardAction as DA
participant DashboardStateReducer as DSR
participant DashboardSideEffect as DSE
participant DashboardService as DS
participant DashboardRepository as DR

User -> DF : send(action: LoadDashboard)
activate DF

DF -> DA : Create LoadDashboard action
activate DA
DA --> DF : Return LoadDashboard action
deactivate DA

DF -> DSR : reduce(LoadDashboard, currentState)
activate DSR

DSR -> DSE : execute(LoadDashboard)
activate DSE
note right of DSE
  Side effects can include
  logging, analytics or
  navigation events, like
  showing a loading screen.
end note
DSE --> DSR : Side effect executed
deactivate DSE

DSR --> DF : Return new state (Loading)
deactivate DSR

DF -> DS : use(LoadDashboard)
activate DS

DS -> DR : use(LoadDashboard)
activate DR

note right of DR
  The repository fetches data
  from remote or local sources.
end note

DR --> DS : Return DashboardDTO
deactivate DR

note right of DS
  The service maps the DTO
  to a new Dashboard state.
end note

DS --> DF : Return new state (Success)
deactivate DS

note right of DF
  The feature updates the state
  and notifies the UI.
end note

deactivate DF

@enduml